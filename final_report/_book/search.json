[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "재실감지 프로젝트 보고서",
    "section": "",
    "text": "AQARA 재실감지 프로젝트"
  },
  {
    "objectID": "intro.html",
    "href": "intro.html",
    "title": "2  Introduction",
    "section": "",
    "text": "This is a book created from markdown and executable code.\nSee Knuth (1984) for additional discussion of literate programming.\n\n1 + 1\n\n[1] 2\n\n\n\n\n\n\nKnuth, Donald E. 1984. “Literate Programming.” Comput. J. 27 (2): 97–111. https://doi.org/10.1093/comjnl/27.2.97."
  },
  {
    "objectID": "summary.html",
    "href": "summary.html",
    "title": "2  Summary",
    "section": "",
    "text": "In summary, this book has no content whatsoever.\n\n1 + 1\n\n[1] 2"
  },
  {
    "objectID": "references.html",
    "href": "references.html",
    "title": "3  References",
    "section": "",
    "text": "Knuth, Donald E. 1984. “Literate Programming.” Comput.\nJ. 27 (2): 97–111. https://doi.org/10.1093/comjnl/27.2.97."
  },
  {
    "objectID": "eda.html",
    "href": "eda.html",
    "title": "1  Raw Data Analysis",
    "section": "",
    "text": "1.0.1 Exploratory Data Analysis\n\naqara %&gt;% str()\n\nClasses 'data.table' and 'data.frame':  3900 obs. of  8 variables:\n $ timestamp  : POSIXct, format: \"2023-05-25 08:00:00\" \"2023-05-25 08:01:00\" ...\n $ co2        : num  560 590 590 590 590 590 625 625 625 625 ...\n $ temperature: num  2297 2297 2297 2297 2297 ...\n $ humidity   : num  4271 4271 4271 4271 4271 ...\n $ door       : num  54613010 54673025 54733026 54793030 54853005 ...\n $ motion     : num  22018948 22078965 22138954 22198955 22258939 ...\n $ fp2        : Factor w/ 2 levels \"non_detection\",..: 1 1 1 1 1 1 1 1 1 1 ...\n $ occupancy  : Factor w/ 2 levels \"non_detection\",..: 1 1 1 1 1 1 1 1 1 1 ...\n - attr(*, \".internal.selfref\")=&lt;externalptr&gt; \n\naqara %&gt;% skim()\n\n\nData summary\n\n\nName\nPiped data\n\n\nNumber of rows\n3900\n\n\nNumber of columns\n8\n\n\nKey\nNULL\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\nfactor\n2\n\n\nnumeric\n5\n\n\nPOSIXct\n1\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: factor\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nordered\nn_unique\ntop_counts\n\n\n\n\nfp2\n0\n1\nFALSE\n2\ndet: 2718, non: 1182\n\n\noccupancy\n0\n1\nFALSE\n2\ndet: 2199, non: 1701\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\nco2\n0\n1\n882.93\n217.76\n443\n703.0\n864.0\n1045\n1624\n▅▇▆▂▁\n\n\ntemperature\n0\n1\n2471.75\n145.41\n2108\n2433.0\n2518.0\n2570\n2667\n▂▂▃▇▇\n\n\nhumidity\n0\n1\n4999.89\n361.70\n4271\n4716.0\n4935.0\n5348\n5537\n▂▆▅▃▇\n\n\ndoor\n0\n1\n4935426.47\n21467539.89\n107\n378347.2\n1064642.5\n2147328\n163814931\n▇▁▁▁▁\n\n\nmotion\n0\n1\n1267060.27\n3239425.31\n897\n54805.5\n204646.5\n1147671\n25618955\n▇▁▁▁▁\n\n\n\nVariable type: POSIXct\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmin\nmax\nmedian\nn_unique\n\n\n\n\ntimestamp\n0\n1\n2023-05-25 08:00:00\n2023-06-21 16:59:00\n2023-06-12 16:29:30\n3900\n\n\n\n\n\n\naqara &lt;- aqara %&gt;% \n  mutate(year = year(timestamp),\n         month = month(timestamp),\n         day = day(timestamp),\n         weekday = weekdays(timestamp),\n         hour = hour(timestamp),\n         minute = minute(timestamp),\n         temperature = temperature/100,\n         humidity = humidity/100) \naqara %&gt;% \n  head()\n\n             timestamp co2 temperature humidity     door   motion           fp2\n1: 2023-05-25 08:00:00 560       22.97    42.71 54613010 22018948 non_detection\n2: 2023-05-25 08:01:00 590       22.97    42.71 54673025 22078965 non_detection\n3: 2023-05-25 08:02:00 590       22.97    42.71 54733026 22138954 non_detection\n4: 2023-05-25 08:03:00 590       22.97    42.71 54793030 22198955 non_detection\n5: 2023-05-25 08:04:00 590       22.97    42.71 54853005 22258939 non_detection\n6: 2023-05-25 08:05:00 590       22.97    42.71 54913014 22318954 non_detection\n       occupancy year month day  weekday hour minute\n1: non_detection 2023     5  25 Thursday    8      0\n2: non_detection 2023     5  25 Thursday    8      1\n3: non_detection 2023     5  25 Thursday    8      2\n4: non_detection 2023     5  25 Thursday    8      3\n5: non_detection 2023     5  25 Thursday    8      4\n6: non_detection 2023     5  25 Thursday    8      5\n\n\n\naqara %&gt;% \n  select_if(is.numeric) %&gt;%\n  gather() %&gt;% \n  ggplot(mapping=aes(x=value,fill=key)) +\n  facet_wrap(~key,scale='free')+\n  geom_boxplot() +\n  theme_minimal() +\n  theme(legend.position='none')\n\n\n\n\n\naqara %&gt;% \n  select_if(is.numeric) %&gt;% \n  pivot_longer(cols=everything()) %&gt;% \n  ggplot(mapping=aes(x=value,fill=name)) +\n  geom_histogram() +\n  facet_wrap(~name,scale='free') +\n  theme_minimal() +\n  theme(legend.position='none')\n\n\n\n\n\nplot_boxplot(aqara,by = \"occupancy\",ncol=3)\n\n\n\n\n\nplot_boxplot(aqara,by = \"fp2\",ncol=3)\n\n\n\n\n\nplot_bar(data=aqara %&gt;% select(-timestamp),by=\"occupancy\",ncol=2)\n\n\n\n\n\naqara &lt;- aqara %&gt;% \n  filter(!weekday=='Sunday') \n\n\nplot_boxplot(aqara,by = \"weekday\",ncol=3)\n\n\n\n\n\naqara %&gt;% \n  ggpairs(aes(fill=occupancy))\n\n\n\n\n\nwrite.csv(aqara,\"eda.csv\")"
  },
  {
    "objectID": "statistics.html",
    "href": "statistics.html",
    "title": "2  statistics",
    "section": "",
    "text": "3 통계 검정\n\nst_aqara &lt;- read.csv(\"eda.csv\")\nst_aqara %&gt;% glimpse()\n\nRows: 3,420\nColumns: 15\n$ X           &lt;int&gt; 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17,…\n$ timestamp   &lt;chr&gt; \"2023-05-25 08:00:00\", \"2023-05-25 08:01:00\", \"2023-05-25 …\n$ co2         &lt;int&gt; 560, 590, 590, 590, 590, 590, 625, 625, 625, 625, 625, 660…\n$ temperature &lt;dbl&gt; 22.97, 22.97, 22.97, 22.97, 22.97, 22.97, 22.97, 22.97, 22…\n$ humidity    &lt;dbl&gt; 42.71, 42.71, 42.71, 42.71, 42.71, 42.71, 42.71, 42.71, 42…\n$ door        &lt;int&gt; 54613010, 54673025, 54733026, 54793030, 54853005, 54913014…\n$ motion      &lt;int&gt; 22018948, 22078965, 22138954, 22198955, 22258939, 22318954…\n$ fp2         &lt;chr&gt; \"non_detection\", \"non_detection\", \"non_detection\", \"non_de…\n$ occupancy   &lt;chr&gt; \"non_detection\", \"non_detection\", \"non_detection\", \"non_de…\n$ year        &lt;int&gt; 2023, 2023, 2023, 2023, 2023, 2023, 2023, 2023, 2023, 2023…\n$ month       &lt;int&gt; 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5…\n$ day         &lt;int&gt; 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25…\n$ weekday     &lt;chr&gt; \"Thursday\", \"Thursday\", \"Thursday\", \"Thursday\", \"Thursday\"…\n$ hour        &lt;int&gt; 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8…\n$ minute      &lt;int&gt; 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, …\n\n\n\nst_aqara &lt;- st_aqara %&gt;% \n  mutate(timestamp = as.POSIXct(timestamp)) %&gt;% \n  mutate_if(is.character, as.factor)\nst_aqara %&gt;% \n  str()\n\n'data.frame':   3420 obs. of  15 variables:\n $ X          : int  1 2 3 4 5 6 7 8 9 10 ...\n $ timestamp  : POSIXct, format: \"2023-05-25 08:00:00\" \"2023-05-25 08:01:00\" ...\n $ co2        : int  560 590 590 590 590 590 625 625 625 625 ...\n $ temperature: num  23 23 23 23 23 ...\n $ humidity   : num  42.7 42.7 42.7 42.7 42.7 ...\n $ door       : int  54613010 54673025 54733026 54793030 54853005 54913014 54973018 55033025 55093088 55152999 ...\n $ motion     : int  22018948 22078965 22138954 22198955 22258939 22318954 22378947 22438965 22499015 22558943 ...\n $ fp2        : Factor w/ 2 levels \"detection\",\"non_detection\": 2 2 2 2 2 2 2 2 2 2 ...\n $ occupancy  : Factor w/ 2 levels \"detection\",\"non_detection\": 2 2 2 2 2 2 2 2 2 2 ...\n $ year       : int  2023 2023 2023 2023 2023 2023 2023 2023 2023 2023 ...\n $ month      : int  5 5 5 5 5 5 5 5 5 5 ...\n $ day        : int  25 25 25 25 25 25 25 25 25 25 ...\n $ weekday    : Factor w/ 4 levels \"Monday\",\"Thursday\",..: 2 2 2 2 2 2 2 2 2 2 ...\n $ hour       : int  8 8 8 8 8 8 8 8 8 8 ...\n $ minute     : int  0 1 2 3 4 5 6 7 8 9 ...\n\n\n\nOccupancy 유무에 따라 CO2 평균값에 차이가 있는지 검정\nNull Hypothesis: occupancy 유무에 따른 CO2평균값의 차이는 없다.\nAlternative Hypothesis: occupancy 유무에 따른 CO2평균값의 차이가 있다.\n\n\nresult &lt;- t.test(co2 ~ occupancy,data=st_aqara)\nresult\n\n\n    Welch Two Sample t-test\n\ndata:  co2 by occupancy\nt = 34.632, df = 3365.8, p-value &lt; 2.2e-16\nalternative hypothesis: true difference in means between group detection and group non_detection is not equal to 0\n95 percent confidence interval:\n 203.2863 227.6856\nsample estimates:\n    mean in group detection mean in group non_detection \n                   972.0119                    756.5259 \n\n\n\nco2_occupancy &lt;- lm(co2 ~ occupancy,data=st_aqara)\nplot(co2_occupancy)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n# residual normality\nshapiro.test(resid(co2_occupancy))\n\n\n    Shapiro-Wilk normality test\n\ndata:  resid(co2_occupancy)\nW = 0.9803, p-value &lt; 2.2e-16\n\nco2_detection &lt;- st_aqara %&gt;% \n  filter(occupancy==\"detection\") %&gt;% \n  select(co2)\nco2_non_detection &lt;- st_aqara %&gt;% \n  filter(occupancy==\"non_detection\") %&gt;% \n  select(co2)\n# when detected, normality\nshapiro.test(co2_detection$co2)\n\n\n    Shapiro-Wilk normality test\n\ndata:  co2_detection$co2\nW = 0.99224, p-value = 2.415e-08\n\n# when not detected, normality\nshapiro.test(co2_non_detection$co2)\n\n\n    Shapiro-Wilk normality test\n\ndata:  co2_non_detection$co2\nW = 0.93696, p-value &lt; 2.2e-16\n\n\n위의 Shapiro-Wilk 정규성 결과에 따라 정규성을 따르고 있지 않으므로 비모수 검정 시행(Wilcox\n\nresult &lt;- wilcox.test(co2 ~ occupancy,alternative=\"two.sided\",data=st_aqara)\nresult\n\n\n    Wilcoxon rank sum test with continuity correction\n\ndata:  co2 by occupancy\nW = 2347174, p-value &lt; 2.2e-16\nalternative hypothesis: true location shift is not equal to 0\n\n\nWilcoxon rank sum test결과 유의확률이 유의수준(0.05)보다 작으므로, 귀무가설을 기각한다. 즉, occupancy유무에 따라 co2의 평균값에 유의한 차이를 보인다.\n\nOccupancy 유무에 따라 Temperature 평균값에 차이가 있는지 검정\nOccupancy 유무에 따라 Humidity 평균값에 차이가 있는지 검정\nfp2와 occupancy 의 독립성 검정"
  },
  {
    "objectID": "statistics.html#통계-검정",
    "href": "statistics.html#통계-검정",
    "title": "2  Statistics",
    "section": "2.1 통계 검정",
    "text": "2.1 통계 검정\n\nst_aqara &lt;- read.csv(\"eda.csv\")\nst_aqara %&gt;% glimpse()\n\nRows: 3,420\nColumns: 15\n$ X           &lt;int&gt; 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17,…\n$ timestamp   &lt;chr&gt; \"2023-05-25 08:00:00\", \"2023-05-25 08:01:00\", \"2023-05-25 …\n$ co2         &lt;int&gt; 560, 590, 590, 590, 590, 590, 625, 625, 625, 625, 625, 660…\n$ temperature &lt;dbl&gt; 22.97, 22.97, 22.97, 22.97, 22.97, 22.97, 22.97, 22.97, 22…\n$ humidity    &lt;dbl&gt; 42.71, 42.71, 42.71, 42.71, 42.71, 42.71, 42.71, 42.71, 42…\n$ door        &lt;int&gt; 54613010, 54673025, 54733026, 54793030, 54853005, 54913014…\n$ motion      &lt;int&gt; 22018948, 22078965, 22138954, 22198955, 22258939, 22318954…\n$ fp2         &lt;chr&gt; \"non_detection\", \"non_detection\", \"non_detection\", \"non_de…\n$ occupancy   &lt;chr&gt; \"non_detection\", \"non_detection\", \"non_detection\", \"non_de…\n$ year        &lt;int&gt; 2023, 2023, 2023, 2023, 2023, 2023, 2023, 2023, 2023, 2023…\n$ month       &lt;int&gt; 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5…\n$ day         &lt;int&gt; 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25…\n$ weekday     &lt;chr&gt; \"Thursday\", \"Thursday\", \"Thursday\", \"Thursday\", \"Thursday\"…\n$ hour        &lt;int&gt; 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8…\n$ minute      &lt;int&gt; 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, …\n\n\n\nst_aqara &lt;- st_aqara %&gt;% \n  mutate(timestamp = as.POSIXct(timestamp)) %&gt;% \n  mutate_if(is.character, as.factor)\nst_aqara %&gt;% \n  str()\n\n'data.frame':   3420 obs. of  15 variables:\n $ X          : int  1 2 3 4 5 6 7 8 9 10 ...\n $ timestamp  : POSIXct, format: \"2023-05-25 08:00:00\" \"2023-05-25 08:01:00\" ...\n $ co2        : int  560 590 590 590 590 590 625 625 625 625 ...\n $ temperature: num  23 23 23 23 23 ...\n $ humidity   : num  42.7 42.7 42.7 42.7 42.7 ...\n $ door       : int  54613010 54673025 54733026 54793030 54853005 54913014 54973018 55033025 55093088 55152999 ...\n $ motion     : int  22018948 22078965 22138954 22198955 22258939 22318954 22378947 22438965 22499015 22558943 ...\n $ fp2        : Factor w/ 2 levels \"detection\",\"non_detection\": 2 2 2 2 2 2 2 2 2 2 ...\n $ occupancy  : Factor w/ 2 levels \"detection\",\"non_detection\": 2 2 2 2 2 2 2 2 2 2 ...\n $ year       : int  2023 2023 2023 2023 2023 2023 2023 2023 2023 2023 ...\n $ month      : int  5 5 5 5 5 5 5 5 5 5 ...\n $ day        : int  25 25 25 25 25 25 25 25 25 25 ...\n $ weekday    : Factor w/ 4 levels \"Monday\",\"Thursday\",..: 2 2 2 2 2 2 2 2 2 2 ...\n $ hour       : int  8 8 8 8 8 8 8 8 8 8 ...\n $ minute     : int  0 1 2 3 4 5 6 7 8 9 ...\n\n\n\n2.1.1 Occupancy 유무에 따라 CO2 평균값에 차이가 있는지 검정\nNull Hypothesis: occupancy 유무에 따른 CO2평균값의 차이는 없다.\n\nAlternative Hypothesis: occupancy 유무에 따른 CO2평균값의 차이가 있다.\n\nresult &lt;- t.test(co2 ~ occupancy,data=st_aqara)\nresult\n\n\n    Welch Two Sample t-test\n\ndata:  co2 by occupancy\nt = 34.632, df = 3365.8, p-value &lt; 2.2e-16\nalternative hypothesis: true difference in means between group detection and group non_detection is not equal to 0\n95 percent confidence interval:\n 203.2863 227.6856\nsample estimates:\n    mean in group detection mean in group non_detection \n                   972.0119                    756.5259 \n\n\n\nco2_occupancy &lt;- lm(co2 ~ occupancy,data=st_aqara)\nplot(co2_occupancy)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n# residual normality test\nshapiro.test(resid(co2_occupancy))\n\n\n    Shapiro-Wilk normality test\n\ndata:  resid(co2_occupancy)\nW = 0.9803, p-value &lt; 2.2e-16\n\nco2_detection &lt;- st_aqara %&gt;% \n  filter(occupancy==\"detection\") %&gt;% \n  select(co2)\nco2_non_detection &lt;- st_aqara %&gt;% \n  filter(occupancy==\"non_detection\") %&gt;% \n  select(co2)\n# when detected, normality test\nshapiro.test(co2_detection$co2)\n\n\n    Shapiro-Wilk normality test\n\ndata:  co2_detection$co2\nW = 0.99224, p-value = 2.415e-08\n\n# when not detected, normality test\nshapiro.test(co2_non_detection$co2)\n\n\n    Shapiro-Wilk normality test\n\ndata:  co2_non_detection$co2\nW = 0.93696, p-value &lt; 2.2e-16\n\n\n위의 Shapiro-Wilk 정규성 결과에 따라 정규성을 따르고 있지 않으므로 비모수 검정 시행(Wilcox 순위합 검정)\n\nresult &lt;- wilcox.test(co2 ~ occupancy,alternative=\"two.sided\",data=st_aqara)\nresult\n\n\n    Wilcoxon rank sum test with continuity correction\n\ndata:  co2 by occupancy\nW = 2347174, p-value &lt; 2.2e-16\nalternative hypothesis: true location shift is not equal to 0\n\n\nWilcoxon rank sum test결과 유의확률이 유의수준(0.05)보다 작으므로, 귀무가설을 기각한다. 즉, occupancy유무에 따라 co2의 평균값에 유의한 차이를 보인다.\n\n\n2.1.2 Occupancy 유무에 따라 Temperature 평균값에 차이가 있는지 검정\nNull Hypothesis: occupancy 유무에 따른 Temperature평균값의 차이는 없다.\nAlternative Hypothesis: occupancy 유무에 따른 Temperature평균값의 차이가 있다.\n\n# Normality Test\nwith(st_aqara,shapiro.test(temperature))\n\n\n    Shapiro-Wilk normality test\n\ndata:  temperature\nW = 0.84243, p-value &lt; 2.2e-16\n\n\n위의 Shapiro-Wilk 정규성 검정 결과, 정규성을 따르지 않으므로 Wilcox 순위합 검정을 시행한다.\n\nresult &lt;- wilcox.test(temperature ~ occupancy,alternative=\"two.sided\",data=st_aqara)\nresult\n\n\n    Wilcoxon rank sum test with continuity correction\n\ndata:  temperature by occupancy\nW = 1663951, p-value = 1.518e-13\nalternative hypothesis: true location shift is not equal to 0\n\n\nWilcoxon rank sum test결과 유의확률이 유의수준(0.05)보다 작으므로, 귀무가설을 기각한다. 즉, occupancy유무에 따라 temperature의 평균값에 유의한 차이를 보인다.\n\n\n2.1.3 Occupancy 유무에 따라 Humidity 평균값에 차이가 있는지 검정\nNull Hypothesis: occupancy 유무에 따른 Humidity 평균값의 차이는 없다.\nAlternative Hypothesis: occupancy 유무에 따른 CO2평균값의 차이가 있다.\n\n# Normality Test\nwith(st_aqara,shapiro.test(humidity))\n\n\n    Shapiro-Wilk normality test\n\ndata:  humidity\nW = 0.93167, p-value &lt; 2.2e-16\n\n\n위의 Shapiro-Wilk 정규성 검정 결과, 정규성을 따르지 않으므로 Wilcox 순위합 검정을 시행한다.\n\nresult &lt;- wilcox.test(humidity ~ occupancy,alternative=\"two.sided\",data=st_aqara)\nresult\n\n\n    Wilcoxon rank sum test with continuity correction\n\ndata:  humidity by occupancy\nW = 1716938, p-value &lt; 2.2e-16\nalternative hypothesis: true location shift is not equal to 0\n\n\nWilcoxon rank sum test결과 유의확률이 유의수준(0.05)보다 작으므로, 귀무가설을 기각한다. 즉, occupancy유무에 따라 humidity의 평균값에 유의한 차이를 보인다.\n\n\n2.1.4 fp2와 occupancy 의 독립성 검정\nNull Hypothesis: fp2와 occupancy는 독립이다. (두 변수사이에는 아무런 관련이 없다.)\nAlternative Hypothesis: fp2와 occupancy는 독립이 아니다. (두변수 사이에는 관련이 있다.)\n\n2.1.4.1 Contingency Table\n\nct &lt;- with(st_aqara,table(fp2,occupancy))\nct\n\n               occupancy\nfp2             detection non_detection\n  detection          1826           542\n  non_detection        29          1023\n\n\n\n\n2.1.4.2 Chi-square 독립성 검정\n\nresult &lt;- chisq.test(ct)\nresult\n\n\n    Pearson's Chi-squared test with Yates' continuity correction\n\ndata:  ct\nX-squared = 1619.5, df = 1, p-value &lt; 2.2e-16\n\n\nChi-square 독립성 검정 결과에 따라 p-value값이 유의수준(0.05)보다 작으므로, 귀무가설을 기각할 수 있다. 즉, fp2와 occupancy와 상호 관련이 있다.\n\n\n2.1.4.3 Chi-square검정의 신뢰성\n\nresult$expected\n\n               occupancy\nfp2             detection non_detection\n  detection     1284.3977     1083.6023\n  non_detection  570.6023      481.3977\n\n\n위 각 셀의 기대값이 모두 5보다 크므로 Chi-square검정은 신뢰할 수 있으므로 위 검정을 받아 드린다."
  },
  {
    "objectID": "eda.html#exploratory-data-analysis",
    "href": "eda.html#exploratory-data-analysis",
    "title": "1  Raw Data Analysis",
    "section": "1.1 Exploratory Data Analysis",
    "text": "1.1 Exploratory Data Analysis\n\naqara %&gt;% str()\n\nClasses 'data.table' and 'data.frame':  3900 obs. of  8 variables:\n $ timestamp  : POSIXct, format: \"2023-05-25 08:00:00\" \"2023-05-25 08:01:00\" ...\n $ co2        : num  560 590 590 590 590 590 625 625 625 625 ...\n $ temperature: num  2297 2297 2297 2297 2297 ...\n $ humidity   : num  4271 4271 4271 4271 4271 ...\n $ door       : num  54613010 54673025 54733026 54793030 54853005 ...\n $ motion     : num  22018948 22078965 22138954 22198955 22258939 ...\n $ fp2        : Factor w/ 2 levels \"non_detection\",..: 1 1 1 1 1 1 1 1 1 1 ...\n $ occupancy  : Factor w/ 2 levels \"non_detection\",..: 1 1 1 1 1 1 1 1 1 1 ...\n - attr(*, \".internal.selfref\")=&lt;externalptr&gt; \n\naqara %&gt;% skim()\n\n\nData summary\n\n\nName\nPiped data\n\n\nNumber of rows\n3900\n\n\nNumber of columns\n8\n\n\nKey\nNULL\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\nfactor\n2\n\n\nnumeric\n5\n\n\nPOSIXct\n1\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: factor\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nordered\nn_unique\ntop_counts\n\n\n\n\nfp2\n0\n1\nFALSE\n2\ndet: 2718, non: 1182\n\n\noccupancy\n0\n1\nFALSE\n2\ndet: 2199, non: 1701\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\nco2\n0\n1\n882.93\n217.76\n443\n703.0\n864.0\n1045\n1624\n▅▇▆▂▁\n\n\ntemperature\n0\n1\n2471.75\n145.41\n2108\n2433.0\n2518.0\n2570\n2667\n▂▂▃▇▇\n\n\nhumidity\n0\n1\n4999.89\n361.70\n4271\n4716.0\n4935.0\n5348\n5537\n▂▆▅▃▇\n\n\ndoor\n0\n1\n4935426.47\n21467539.89\n107\n378347.2\n1064642.5\n2147328\n163814931\n▇▁▁▁▁\n\n\nmotion\n0\n1\n1267060.27\n3239425.31\n897\n54805.5\n204646.5\n1147671\n25618955\n▇▁▁▁▁\n\n\n\nVariable type: POSIXct\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmin\nmax\nmedian\nn_unique\n\n\n\n\ntimestamp\n0\n1\n2023-05-25 08:00:00\n2023-06-21 16:59:00\n2023-06-12 16:29:30\n3900\n\n\n\n\n\n\naqara &lt;- aqara %&gt;% \n  mutate(year = year(timestamp),\n         month = month(timestamp),\n         day = day(timestamp),\n         weekday = weekdays(timestamp),\n         hour = hour(timestamp),\n         minute = minute(timestamp),\n         temperature = temperature/100,\n         humidity = humidity/100) \naqara %&gt;% \n  head()\n\n             timestamp co2 temperature humidity     door   motion           fp2\n1: 2023-05-25 08:00:00 560       22.97    42.71 54613010 22018948 non_detection\n2: 2023-05-25 08:01:00 590       22.97    42.71 54673025 22078965 non_detection\n3: 2023-05-25 08:02:00 590       22.97    42.71 54733026 22138954 non_detection\n4: 2023-05-25 08:03:00 590       22.97    42.71 54793030 22198955 non_detection\n5: 2023-05-25 08:04:00 590       22.97    42.71 54853005 22258939 non_detection\n6: 2023-05-25 08:05:00 590       22.97    42.71 54913014 22318954 non_detection\n       occupancy year month day  weekday hour minute\n1: non_detection 2023     5  25 Thursday    8      0\n2: non_detection 2023     5  25 Thursday    8      1\n3: non_detection 2023     5  25 Thursday    8      2\n4: non_detection 2023     5  25 Thursday    8      3\n5: non_detection 2023     5  25 Thursday    8      4\n6: non_detection 2023     5  25 Thursday    8      5\n\n\n\naqara %&gt;% \n  select_if(is.numeric) %&gt;%\n  gather() %&gt;% \n  ggplot(mapping=aes(x=value,fill=key)) +\n  facet_wrap(~key,scale='free')+\n  geom_boxplot() +\n  theme_minimal() +\n  theme(legend.position='none')\n\n\n\n\n\naqara %&gt;% \n  select_if(is.numeric) %&gt;% \n  pivot_longer(cols=everything()) %&gt;% \n  ggplot(mapping=aes(x=value,fill=name)) +\n  geom_histogram() +\n  facet_wrap(~name,scale='free') +\n  theme_minimal() +\n  theme(legend.position='none')\n\n\n\n\n\nplot_boxplot(aqara,by = \"occupancy\",ncol=3)\n\n\n\n\n\nplot_boxplot(aqara,by = \"fp2\",ncol=3)\n\n\n\n\n\nplot_bar(data=aqara %&gt;% select(-timestamp),by=\"occupancy\",ncol=2)\n\n\n\n\n\naqara &lt;- aqara %&gt;% \n  filter(!weekday=='Sunday') \n\n\nplot_boxplot(aqara,by = \"weekday\",ncol=3)\n\n\n\n\n\naqara %&gt;% \n  ggpairs(aes(fill=occupancy))\n\n\n\n\n\naqara %&gt;% \n  ggplot(aes(x=occupancy,y=co2)) +\n  geom_boxplot()\n\n\n\n\n\naqara %&gt;% \n  group_by(occupancy) %&gt;% \n  summarise(min = min(co2),\n            mean = mean(co2),\n            max = max(co2))\n\n# A tibble: 2 × 4\n  occupancy       min  mean   max\n  &lt;fct&gt;         &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;\n1 non_detection   443  757.  1624\n2 detection       465  972.  1586\n\n\n\naqara %&gt;% \n  ggplot(aes(x=weekday,y=co2),col=weekday) +\n  geom_boxplot()\n\n\n\n\n\nwrite.csv(aqara,\"eda.csv\")"
  },
  {
    "objectID": "feature_engineering.html#eda-후-저장된-데이터-로드",
    "href": "feature_engineering.html#eda-후-저장된-데이터-로드",
    "title": "3  Feature_Engineering",
    "section": "3.1 EDA 후 저장된 데이터 로드",
    "text": "3.1 EDA 후 저장된 데이터 로드\n\ndat &lt;- read.csv(\"eda.csv\")\ndat %&gt;% str()\n\n'data.frame':   3420 obs. of  15 variables:\n $ X          : int  1 2 3 4 5 6 7 8 9 10 ...\n $ timestamp  : chr  \"2023-05-25 08:00:00\" \"2023-05-25 08:01:00\" \"2023-05-25 08:02:00\" \"2023-05-25 08:03:00\" ...\n $ co2        : int  560 590 590 590 590 590 625 625 625 625 ...\n $ temperature: num  23 23 23 23 23 ...\n $ humidity   : num  42.7 42.7 42.7 42.7 42.7 ...\n $ door       : int  54613010 54673025 54733026 54793030 54853005 54913014 54973018 55033025 55093088 55152999 ...\n $ motion     : int  22018948 22078965 22138954 22198955 22258939 22318954 22378947 22438965 22499015 22558943 ...\n $ fp2        : chr  \"non_detection\" \"non_detection\" \"non_detection\" \"non_detection\" ...\n $ occupancy  : chr  \"non_detection\" \"non_detection\" \"non_detection\" \"non_detection\" ...\n $ year       : int  2023 2023 2023 2023 2023 2023 2023 2023 2023 2023 ...\n $ month      : int  5 5 5 5 5 5 5 5 5 5 ...\n $ day        : int  25 25 25 25 25 25 25 25 25 25 ...\n $ weekday    : chr  \"Thursday\" \"Thursday\" \"Thursday\" \"Thursday\" ...\n $ hour       : int  8 8 8 8 8 8 8 8 8 8 ...\n $ minute     : int  0 1 2 3 4 5 6 7 8 9 ...\n\ndat &lt;- dat %&gt;% \n  select(-X) %&gt;% \n  mutate(timestamp= as.POSIXct(timestamp)) %&gt;% \n  mutate_if(is.character, as.factor)\n\ndat %&gt;% str()\n\n'data.frame':   3420 obs. of  14 variables:\n $ timestamp  : POSIXct, format: \"2023-05-25 08:00:00\" \"2023-05-25 08:01:00\" ...\n $ co2        : int  560 590 590 590 590 590 625 625 625 625 ...\n $ temperature: num  23 23 23 23 23 ...\n $ humidity   : num  42.7 42.7 42.7 42.7 42.7 ...\n $ door       : int  54613010 54673025 54733026 54793030 54853005 54913014 54973018 55033025 55093088 55152999 ...\n $ motion     : int  22018948 22078965 22138954 22198955 22258939 22318954 22378947 22438965 22499015 22558943 ...\n $ fp2        : Factor w/ 2 levels \"detection\",\"non_detection\": 2 2 2 2 2 2 2 2 2 2 ...\n $ occupancy  : Factor w/ 2 levels \"detection\",\"non_detection\": 2 2 2 2 2 2 2 2 2 2 ...\n $ year       : int  2023 2023 2023 2023 2023 2023 2023 2023 2023 2023 ...\n $ month      : int  5 5 5 5 5 5 5 5 5 5 ...\n $ day        : int  25 25 25 25 25 25 25 25 25 25 ...\n $ weekday    : Factor w/ 4 levels \"Monday\",\"Thursday\",..: 2 2 2 2 2 2 2 2 2 2 ...\n $ hour       : int  8 8 8 8 8 8 8 8 8 8 ...\n $ minute     : int  0 1 2 3 4 5 6 7 8 9 ..."
  },
  {
    "objectID": "feature_engineering.html#traintest-셋-분리",
    "href": "feature_engineering.html#traintest-셋-분리",
    "title": "3  Feature_Engineering",
    "section": "3.2 Train/Test 셋 분리",
    "text": "3.2 Train/Test 셋 분리\n\ndat &lt;- dat %&gt;% \n  select(-c(timestamp,year,month,day,minute))\nsplits &lt;- dat %&gt;% nrow()*0.8\ntrain &lt;- dat[1:splits,]\ntest &lt;- dat[(splits+1):(dat %&gt;% nrow()),]\ntrain %&gt;% nrow()\n\n[1] 2736\n\ntest %&gt;% nrow()\n\n[1] 684\n\n\n\ndat%&gt;% is.na() %&gt;% colSums()\n\n        co2 temperature    humidity        door      motion         fp2 \n          0           0           0           0           0           0 \n  occupancy     weekday        hour \n          0           0           0 \n\n\n\nwrite.csv(train,\"train.csv\")\nwrite.csv(test,\"test.csv\")"
  },
  {
    "objectID": "modeling.html#data-loading",
    "href": "modeling.html#data-loading",
    "title": "4  Modeling",
    "section": "4.1 Data Loading",
    "text": "4.1 Data Loading\n\ntrain &lt;- read.csv(\"train.csv\")\ntest &lt;- read.csv(\"test.csv\")\n\ntrain &lt;- train %&gt;% \n  select(-X,-weekday) %&gt;% \n  mutate_if(is.character,as.factor)\n\ntest &lt;- test %&gt;% \n  select(-X,-weekday) %&gt;% \n  mutate_if(is.character,as.factor)\n\n\nrec &lt;- train %&gt;% \n  recipe(occupancy ~.) %&gt;% \n  step_normalize(all_numeric_predictors()) %&gt;% \n  step_dummy(all_factor_predictors())"
  },
  {
    "objectID": "modeling.html#baseline-modeling",
    "href": "modeling.html#baseline-modeling",
    "title": "4  Modeling",
    "section": "4.2 Baseline Modeling",
    "text": "4.2 Baseline Modeling\n\n4.2.1 Logistic Regression\n\nlr_mod &lt;- \n  logistic_reg() %&gt;% \n  set_engine('glm')\n\naqara_workflow &lt;- \n  workflow() %&gt;% \n  add_model(lr_mod) %&gt;% \n  add_recipe(rec)\n\naqara_workflow\n\n══ Workflow ════════════════════════════════════════════════════════════════════\nPreprocessor: Recipe\nModel: logistic_reg()\n\n── Preprocessor ────────────────────────────────────────────────────────────────\n2 Recipe Steps\n\n• step_normalize()\n• step_dummy()\n\n── Model ───────────────────────────────────────────────────────────────────────\nLogistic Regression Model Specification (classification)\n\nComputational engine: glm \n\n\n\nlr_gridsearch &lt;- aqara_workflow %&gt;%\n  fit(data = train)\n\n\nlr_gridsearch %&gt;% \n  pull_workflow_fit() %&gt;% \n  tidy()\n\n# A tibble: 8 × 5\n  term              estimate std.error statistic  p.value\n  &lt;chr&gt;                &lt;dbl&gt;     &lt;dbl&gt;     &lt;dbl&gt;    &lt;dbl&gt;\n1 (Intercept)         -1.04     0.0894    -11.6  4.71e-31\n2 co2                 -0.726    0.0787     -9.22 3.03e-20\n3 temperature         -0.716    0.0710    -10.1  6.63e-24\n4 humidity             0.269    0.0790      3.40 6.77e- 4\n5 door                -3.88     0.446      -8.69 3.54e-18\n6 motion               4.19     0.436       9.60 8.10e-22\n7 hour                -0.310    0.0621     -5.00 5.87e- 7\n8 fp2_non_detection    4.49     0.240      18.7  5.14e-78\n\n\n\npred &lt;- predict(lr_gridsearch,test) \npred &lt;- pred$.pred_class\nconfusionMatrix(pred,test$occupancy)\n\nConfusion Matrix and Statistics\n\n               Reference\nPrediction      detection non_detection\n  detection           437            91\n  non_detection         8           148\n                                          \n               Accuracy : 0.8553          \n                 95% CI : (0.8266, 0.8808)\n    No Information Rate : 0.6506          \n    P-Value [Acc &gt; NIR] : &lt; 2.2e-16       \n                                          \n                  Kappa : 0.6538          \n                                          \n Mcnemar's Test P-Value : &lt; 2.2e-16       \n                                          \n            Sensitivity : 0.9820          \n            Specificity : 0.6192          \n         Pos Pred Value : 0.8277          \n         Neg Pred Value : 0.9487          \n             Prevalence : 0.6506          \n         Detection Rate : 0.6389          \n   Detection Prevalence : 0.7719          \n      Balanced Accuracy : 0.8006          \n                                          \n       'Positive' Class : detection       \n                                          \n\n\n\npred_prob &lt;- predict(lr_gridsearch,test,type='prob') %&gt;% \n  bind_cols(test %&gt;% select(occupancy))\npred_prob \n\n# A tibble: 684 × 3\n   .pred_detection .pred_non_detection occupancy\n             &lt;dbl&gt;               &lt;dbl&gt; &lt;fct&gt;    \n 1           0.814               0.186 detection\n 2           0.806               0.194 detection\n 3           0.792               0.208 detection\n 4           0.784               0.216 detection\n 5           0.776               0.224 detection\n 6           0.872               0.128 detection\n 7           0.870               0.130 detection\n 8           0.865               0.135 detection\n 9           0.861               0.139 detection\n10           0.857               0.143 detection\n# ℹ 674 more rows\n\n\n\npred_prob %&gt;% \n  roc_curve(truth=occupancy,.pred_detection) %&gt;% \n  autoplot()\n\n\n\n\n\npred_prob %&gt;% \n  roc_auc(truth = occupancy, .pred_detection)\n\n# A tibble: 1 × 3\n  .metric .estimator .estimate\n  &lt;chr&gt;   &lt;chr&gt;          &lt;dbl&gt;\n1 roc_auc binary         0.885\n\n\n\n\n4.2.2 Random Forest\n\ncontrol &lt;- trainControl(method='cv',\n                        number=5,\n                        classProbs=T,\n                        summaryFunction = twoClassSummary,\n                        savePredictions=\"all\")\n\ntunegrid &lt;- expand.grid(mtry = c(1:5))\n\nrf_gridsearch &lt;- train(rec,train,\n                       method='rf',\n                       trControl = control,\n                       tuneGrid = tunegrid,\n                       metric =\"ROC\")\n\n\npred &lt;- predict(rf_gridsearch,newdata=test)\nconfusionMatrix(pred,test$occupancy)\n\nConfusion Matrix and Statistics\n\n               Reference\nPrediction      detection non_detection\n  detection           421            69\n  non_detection        24           170\n                                         \n               Accuracy : 0.864          \n                 95% CI : (0.836, 0.8888)\n    No Information Rate : 0.6506         \n    P-Value [Acc &gt; NIR] : &lt; 2.2e-16      \n                                         \n                  Kappa : 0.6873         \n                                         \n Mcnemar's Test P-Value : 5.053e-06      \n                                         \n            Sensitivity : 0.9461         \n            Specificity : 0.7113         \n         Pos Pred Value : 0.8592         \n         Neg Pred Value : 0.8763         \n             Prevalence : 0.6506         \n         Detection Rate : 0.6155         \n   Detection Prevalence : 0.7164         \n      Balanced Accuracy : 0.8287         \n                                         \n       'Positive' Class : detection      \n                                         \n\n\n\n\n4.2.3 Xgboost\n\ncontrol &lt;- trainControl(method='cv',\n                        number=5,\n                        classProbs=T,\n                        summaryFunction = twoClassSummary,\n                        savePredictions=\"all\")\n\n\nxgb_gridsearch &lt;- train(rec,train,\n                       method='xgbTree',\n                       trControl = control,\n                       tuneLength = 3,\n                       metric =\"ROC\",\n                       verbosity = 0)\n\n\npred_xgb &lt;- predict(xgb_gridsearch,newdata=test)\nconfusionMatrix(pred_xgb,test$occupancy)\n\nConfusion Matrix and Statistics\n\n               Reference\nPrediction      detection non_detection\n  detection           425            70\n  non_detection        20           169\n                                          \n               Accuracy : 0.8684          \n                 95% CI : (0.8408, 0.8929)\n    No Information Rate : 0.6506          \n    P-Value [Acc &gt; NIR] : &lt; 2.2e-16       \n                                          \n                  Kappa : 0.6959          \n                                          \n Mcnemar's Test P-Value : 2.404e-07       \n                                          \n            Sensitivity : 0.9551          \n            Specificity : 0.7071          \n         Pos Pred Value : 0.8586          \n         Neg Pred Value : 0.8942          \n             Prevalence : 0.6506          \n         Detection Rate : 0.6213          \n   Detection Prevalence : 0.7237          \n      Balanced Accuracy : 0.8311          \n                                          \n       'Positive' Class : detection       \n                                          \n\n\n\n\n4.2.4 Support Vector Machine\n\nsvm_gridsearch &lt;- train(rec,train,\n                        method = \"svmPoly\",\n                        trControl = control,\n                        tuneLength = 2,\n                        metric=\"ROC\")\n\n\npred_svm &lt;- predict(svm_gridsearch,newdata=test)\nconfusionMatrix(pred_svm,test$occupancy)\n\nConfusion Matrix and Statistics\n\n               Reference\nPrediction      detection non_detection\n  detection           442           182\n  non_detection         3            57\n                                          \n               Accuracy : 0.7295          \n                 95% CI : (0.6946, 0.7625)\n    No Information Rate : 0.6506          \n    P-Value [Acc &gt; NIR] : 6.095e-06       \n                                          \n                  Kappa : 0.2804          \n                                          \n Mcnemar's Test P-Value : &lt; 2.2e-16       \n                                          \n            Sensitivity : 0.9933          \n            Specificity : 0.2385          \n         Pos Pred Value : 0.7083          \n         Neg Pred Value : 0.9500          \n             Prevalence : 0.6506          \n         Detection Rate : 0.6462          \n   Detection Prevalence : 0.9123          \n      Balanced Accuracy : 0.6159          \n                                          \n       'Positive' Class : detection       \n                                          \n\n\n\n\n4.2.5 Ridge Regression\n\nlambda &lt;- seq(0,1,length=11)\nridge_grid &lt;- expand.grid(alpha=0,lambda=lambda)\nridge_gridsearch &lt;- train(rec,train,\n                       method=\"glmnet\",\n                       trControl = control,\n                       tuneGrid = ridge_grid,\n                       metric = \"ROC\")\n\n\npred_ridge &lt;- predict(ridge_gridsearch,newdata=test)\nconfusionMatrix(pred_ridge,test$occupancy)\n\nConfusion Matrix and Statistics\n\n               Reference\nPrediction      detection non_detection\n  detection           430            89\n  non_detection        15           150\n                                         \n               Accuracy : 0.848          \n                 95% CI : (0.8188, 0.874)\n    No Information Rate : 0.6506         \n    P-Value [Acc &gt; NIR] : &lt; 2.2e-16      \n                                         \n                  Kappa : 0.6398         \n                                         \n Mcnemar's Test P-Value : 8.172e-13      \n                                         \n            Sensitivity : 0.9663         \n            Specificity : 0.6276         \n         Pos Pred Value : 0.8285         \n         Neg Pred Value : 0.9091         \n             Prevalence : 0.6506         \n         Detection Rate : 0.6287         \n   Detection Prevalence : 0.7588         \n      Balanced Accuracy : 0.7970         \n                                         \n       'Positive' Class : detection      \n                                         \n\n\n\n\n4.2.6 Model Selection Based on Cross-Validation\n\nresamps &lt;- resamples(list(\n                          random_forest = rf_gridsearch,\n                          xgb = xgb_gridsearch,\n                          svm = svm_gridsearch,\n                          ridge = ridge_gridsearch\n                          ))\nsummary(resamps)\n\n\nCall:\nsummary.resamples(object = resamps)\n\nModels: random_forest, xgb, svm, ridge \nNumber of resamples: 5 \n\nROC \n                   Min.   1st Qu.    Median      Mean   3rd Qu.      Max. NA's\nrandom_forest 0.9807164 0.9832597 0.9851331 0.9858703 0.9868192 0.9934230    0\nxgb           0.9788900 0.9825104 0.9838686 0.9837989 0.9866988 0.9870266    0\nsvm           0.9207815 0.9389803 0.9408136 0.9408004 0.9465952 0.9568313    0\nridge         0.9166600 0.9250653 0.9256256 0.9296324 0.9395022 0.9413087    0\n\nSens \n                   Min.   1st Qu.    Median      Mean   3rd Qu.      Max. NA's\nrandom_forest 0.9361702 0.9539007 0.9716312 0.9617021 0.9716312 0.9751773    0\nxgb           0.9361702 0.9397163 0.9432624 0.9560284 0.9716312 0.9893617    0\nsvm           0.9751773 0.9822695 0.9822695 0.9815603 0.9822695 0.9858156    0\nridge         0.9326241 0.9503546 0.9503546 0.9567376 0.9609929 0.9893617    0\n\nSpec \n                   Min.   1st Qu.    Median      Mean   3rd Qu.      Max. NA's\nrandom_forest 0.8947368 0.9169811 0.9245283 0.9238530 0.9396226 0.9433962    0\nxgb           0.9169811 0.9320755 0.9358491 0.9328756 0.9396226 0.9398496    0\nsvm           0.6830189 0.7207547 0.7358491 0.7284806 0.7396226 0.7631579    0\nridge         0.7471698 0.7773585 0.7781955 0.7850731 0.7849057 0.8377358    0\n\n\n\nbwplot(resamps,metric=\"ROC\")\n\n\n\n\nArgument: ROC를 기반으로 판단해 보면, randomForest와 XGB가 가장 우수하나, randomForest가 상대적으로 분산이 작고, 성능도 약간 우수한 편이므로 randomForest를 최종 모델로 선택한 것이 바람직 하다."
  },
  {
    "objectID": "evaluation.html#evaluation---randomforest-모델",
    "href": "evaluation.html#evaluation---randomforest-모델",
    "title": "5  Evaluation",
    "section": "5.1 Evaluation - randomForest 모델",
    "text": "5.1 Evaluation - randomForest 모델\nCross Validation 기반하에 채택된 randomForest 모델을 평가해 본다."
  },
  {
    "objectID": "evaluation.html#data-loading",
    "href": "evaluation.html#data-loading",
    "title": "5  Evaluation",
    "section": "5.2 Data Loading",
    "text": "5.2 Data Loading\n\ntrain &lt;- read.csv(\"train.csv\")\ntest &lt;- read.csv(\"test.csv\")\n\ntrain &lt;- train %&gt;% \n  select(-X,-weekday) %&gt;% \n  mutate_if(is.character,as.factor)\n\ntest &lt;- test %&gt;% \n  select(-X,-weekday) %&gt;% \n  mutate_if(is.character,as.factor)\n\n\nrec &lt;- train %&gt;% \n  recipe(occupancy ~.) %&gt;% \n  step_normalize(all_numeric_predictors()) %&gt;% \n  step_dummy(all_factor_predictors())"
  },
  {
    "objectID": "evaluation.html#modeling",
    "href": "evaluation.html#modeling",
    "title": "5  Evaluation",
    "section": "5.3 Modeling",
    "text": "5.3 Modeling\n\n5.3.1 Random Forest\n\ncontrol &lt;- trainControl(method='cv',\n                        number=5,\n                        classProbs=T,\n                        summaryFunction = twoClassSummary,\n                        savePredictions=\"all\")\n\ntunegrid &lt;- expand.grid(mtry = c(1:5))\n\nrf_gridsearch &lt;- train(rec,train,\n                       method='rf',\n                       trControl = control,\n                       tuneGrid = tunegrid,\n                       metric =\"ROC\")\n\n\n\n5.3.2 Confusion Matrix\n\npred &lt;- predict(rf_gridsearch,newdata=test)\nconfusionMatrix(pred,test$occupancy)\n\nConfusion Matrix and Statistics\n\n               Reference\nPrediction      detection non_detection\n  detection           422            70\n  non_detection        23           169\n                                         \n               Accuracy : 0.864          \n                 95% CI : (0.836, 0.8888)\n    No Information Rate : 0.6506         \n    P-Value [Acc &gt; NIR] : &lt; 2.2e-16      \n                                         \n                  Kappa : 0.6867         \n                                         \n Mcnemar's Test P-Value : 1.842e-06      \n                                         \n            Sensitivity : 0.9483         \n            Specificity : 0.7071         \n         Pos Pred Value : 0.8577         \n         Neg Pred Value : 0.8802         \n             Prevalence : 0.6506         \n         Detection Rate : 0.6170         \n   Detection Prevalence : 0.7193         \n      Balanced Accuracy : 0.8277         \n                                         \n       'Positive' Class : detection      \n                                         \n\n\n\n\n5.3.3 Feature Importance\n\nplot(varImp(rf_gridsearch,scale=F))\n\n\n\n\n\n\n5.3.4 ROC\n\nlibrary(pROC)\npred_prob &lt;- predict(rf_gridsearch,newdata=test,type=\"prob\")[,1]\nroc_result &lt;- roc(response=test$occupancy,\n                  predictor=pred_prob,\n                  levels =rev(levels(test$occupancy)))\n\n\npar(pty=\"s\")\nplot(roc_result,\n     print.thres =\"best\",\n     print.auc = TRUE,\n     legacy.axes = T)"
  },
  {
    "objectID": "eda.html#raw-data-in-a-glance",
    "href": "eda.html#raw-data-in-a-glance",
    "title": "1  Exploratory Data Analysis",
    "section": "1.1 Raw Data in a Glance",
    "text": "1.1 Raw Data in a Glance\n\n1.1.1 데이터 로딩\n\naqara &lt;- fread(\"integrated_0526_0622.csv\")\naqara &lt;- aqara %&gt;% \n  mutate(fp2 = factor(fp2,labels=c(\"non_detection\",\"detection\")),\n         occupancy = factor(occupancy,labels=c(\"non_detection\",\"detection\")),\n         timestamp = timestamp - 15*3600)\n\n\n\n1.1.2 Skimming Data\n\naqara %&gt;% str()\n\nClasses 'data.table' and 'data.frame':  3900 obs. of  8 variables:\n $ timestamp  : POSIXct, format: \"2023-05-25 08:00:00\" \"2023-05-25 08:01:00\" ...\n $ co2        : num  560 590 590 590 590 590 625 625 625 625 ...\n $ temperature: num  2297 2297 2297 2297 2297 ...\n $ humidity   : num  4271 4271 4271 4271 4271 ...\n $ door       : num  54613010 54673025 54733026 54793030 54853005 ...\n $ motion     : num  22018948 22078965 22138954 22198955 22258939 ...\n $ fp2        : Factor w/ 2 levels \"non_detection\",..: 1 1 1 1 1 1 1 1 1 1 ...\n $ occupancy  : Factor w/ 2 levels \"non_detection\",..: 1 1 1 1 1 1 1 1 1 1 ...\n - attr(*, \".internal.selfref\")=&lt;externalptr&gt; \n\naqara %&gt;% skim()\n\n\nData summary\n\n\nName\nPiped data\n\n\nNumber of rows\n3900\n\n\nNumber of columns\n8\n\n\nKey\nNULL\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\nfactor\n2\n\n\nnumeric\n5\n\n\nPOSIXct\n1\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: factor\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nordered\nn_unique\ntop_counts\n\n\n\n\nfp2\n0\n1\nFALSE\n2\ndet: 2718, non: 1182\n\n\noccupancy\n0\n1\nFALSE\n2\ndet: 2199, non: 1701\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\nco2\n0\n1\n882.93\n217.76\n443\n703.0\n864.0\n1045\n1624\n▅▇▆▂▁\n\n\ntemperature\n0\n1\n2471.75\n145.41\n2108\n2433.0\n2518.0\n2570\n2667\n▂▂▃▇▇\n\n\nhumidity\n0\n1\n4999.89\n361.70\n4271\n4716.0\n4935.0\n5348\n5537\n▂▆▅▃▇\n\n\ndoor\n0\n1\n4935426.47\n21467539.89\n107\n378347.2\n1064642.5\n2147328\n163814931\n▇▁▁▁▁\n\n\nmotion\n0\n1\n1267060.27\n3239425.31\n897\n54805.5\n204646.5\n1147671\n25618955\n▇▁▁▁▁\n\n\n\nVariable type: POSIXct\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmin\nmax\nmedian\nn_unique\n\n\n\n\ntimestamp\n0\n1\n2023-05-25 08:00:00\n2023-06-21 16:59:00\n2023-06-12 16:29:30\n3900\n\n\n\n\n\n\n\n1.1.3 날짜/시간 관련 파생변수 생성\n\naqara &lt;- aqara %&gt;% \n  mutate(year = year(timestamp),\n         month = month(timestamp),\n         day = day(timestamp),\n         weekday = weekdays(timestamp),\n         hour = hour(timestamp),\n         minute = minute(timestamp),\n         temperature = temperature/100,\n         humidity = humidity/100) \naqara %&gt;% \n  head()\n\n             timestamp co2 temperature humidity     door   motion           fp2\n1: 2023-05-25 08:00:00 560       22.97    42.71 54613010 22018948 non_detection\n2: 2023-05-25 08:01:00 590       22.97    42.71 54673025 22078965 non_detection\n3: 2023-05-25 08:02:00 590       22.97    42.71 54733026 22138954 non_detection\n4: 2023-05-25 08:03:00 590       22.97    42.71 54793030 22198955 non_detection\n5: 2023-05-25 08:04:00 590       22.97    42.71 54853005 22258939 non_detection\n6: 2023-05-25 08:05:00 590       22.97    42.71 54913014 22318954 non_detection\n       occupancy year month day  weekday hour minute\n1: non_detection 2023     5  25 Thursday    8      0\n2: non_detection 2023     5  25 Thursday    8      1\n3: non_detection 2023     5  25 Thursday    8      2\n4: non_detection 2023     5  25 Thursday    8      3\n5: non_detection 2023     5  25 Thursday    8      4\n6: non_detection 2023     5  25 Thursday    8      5"
  },
  {
    "objectID": "eda.html#plot-analysis",
    "href": "eda.html#plot-analysis",
    "title": "1  Exploratory Data Analysis",
    "section": "1.2 Plot Analysis",
    "text": "1.2 Plot Analysis\n\n1.2.1 박스플롯\n\naqara %&gt;% \n  select_if(is.numeric) %&gt;%\n  gather() %&gt;% \n  ggplot(mapping=aes(x=value,fill=key)) +\n  facet_wrap(~key,scale='free')+\n  geom_boxplot() +\n  theme_minimal() +\n  theme(legend.position='none')\n\n\n\n\n\n\n1.2.2 히스토그램\n\naqara %&gt;% \n  select_if(is.numeric) %&gt;% \n  pivot_longer(cols=everything()) %&gt;% \n  ggplot(mapping=aes(x=value,fill=name)) +\n  geom_histogram() +\n  facet_wrap(~name,scale='free') +\n  theme_minimal() +\n  theme(legend.position='none')\n\n\n\n\n\n\n1.2.3 Occupancy유무에 따른 수치형 변수 박스플롯\n\nplot_boxplot(aqara,by = \"occupancy\",ncol=3)\n\n\n\n\n\n\n1.2.4 fp2 감지 유무에 따른 수치형 변수 박스플롯\n\nplot_boxplot(aqara,by = \"fp2\",ncol=3)\n\n\n\n\n\n\n1.2.5 Occupancy 유무에 따른 범주형 변수 박스플롯\n\nplot_bar(data=aqara %&gt;% select(-timestamp),by=\"occupancy\",ncol=2)\n\n\n\n\n\naqara &lt;- aqara %&gt;% \n  filter(!weekday=='Sunday') \n\n\n\n1.2.6 요일별 수치형 변수 박스플롯 - 현재는 충분한 데이터가 없으므로 의미 없음\n\nplot_boxplot(aqara,by = \"weekday\",ncol=3)\n\n\n\n\n\n\n1.2.7 Occupancy 유무에 따른 pairs플롯 및 기타\n\naqara %&gt;% \n  ggpairs(aes(fill=occupancy))\n\n\n\n\n\naqara %&gt;% \n  ggplot(aes(x=occupancy,y=co2)) +\n  geom_boxplot()\n\n\n\n\n\naqara %&gt;% \n  group_by(occupancy) %&gt;% \n  summarise(min = min(co2),\n            mean = mean(co2),\n            max = max(co2))\n\n# A tibble: 2 × 4\n  occupancy       min  mean   max\n  &lt;fct&gt;         &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;\n1 non_detection   443  757.  1624\n2 detection       465  972.  1586\n\n\n\naqara %&gt;% \n  ggplot(aes(x=weekday,y=co2),col=weekday) +\n  geom_boxplot()"
  },
  {
    "objectID": "eda.html#eda-데이터-저장",
    "href": "eda.html#eda-데이터-저장",
    "title": "1  Exploratory Data Analysis",
    "section": "1.3 EDA 데이터 저장",
    "text": "1.3 EDA 데이터 저장\n\nwrite.csv(aqara,\"eda.csv\")"
  },
  {
    "objectID": "demonstration.html#데모-구성",
    "href": "demonstration.html#데모-구성",
    "title": "7  Demonstration",
    "section": "7.1 데모 구성",
    "text": "7.1 데모 구성\nAPI Server (Django), Front-end App with ML\n\n7.1.1 MariaDB 설치(Mac기준)\n# Mariadb installation\nbrew install mariadb\nbrew services restart mariadb\n\n#restart MAC\n\n# password 없이 mysql에 로그인\nsudo mysql -u root\n\n#mysql 로그인 후:\nuse mysql;\nalter user 'root'@'localhost' identified by 'password'\n\n\n7.1.2 Database에 csv file import 하기\n\n7.1.2.1 Django 서버에서 생성한 테이블에 적합하도록 csv file 변경하기\n\nimport pandas as pd\n\ndf = pd.read_csv(\"integrated_0526_0622.csv\")\ndf.head()\n\n\n\n\n\n\n\n\ntimestamp\nco2\ntemperature\nhumidity\ndoor\nmotion\nfp2\noccupancy\n\n\n\n\n0\n2023-05-26 08:00:00+09:00\n560.0\n2297.0\n4271.0\n54613010.0\n22018948.0\n0.0\n0.0\n\n\n1\n2023-05-26 08:01:00+09:00\n590.0\n2297.0\n4271.0\n54673025.0\n22078965.0\n0.0\n0.0\n\n\n2\n2023-05-26 08:02:00+09:00\n590.0\n2297.0\n4271.0\n54733026.0\n22138954.0\n0.0\n0.0\n\n\n3\n2023-05-26 08:03:00+09:00\n590.0\n2297.0\n4271.0\n54793030.0\n22198955.0\n0.0\n0.0\n\n\n4\n2023-05-26 08:04:00+09:00\n590.0\n2297.0\n4271.0\n54853005.0\n22258939.0\n0.0\n0.0\n\n\n\n\n\n\n\n기존 데이터프레임 수정\n\ndf.reset_index(inplace=True)\ndf['account'] =\"ariwells2001@gmail.com\"\ndf['id'] = df.iloc[:,0] + 1\ndf['timestamp'] = df['timestamp'].str[:-6]\ndf['user_id'] = 1\ndf = df.loc[:,['id','account','timestamp','co2','temperature','humidity','door','motion','fp2','occupancy','user_id']]\ndf.head(2)\n\n\n\n\n\n\n\n\nid\naccount\ntimestamp\nco2\ntemperature\nhumidity\ndoor\nmotion\nfp2\noccupancy\nuser_id\n\n\n\n\n0\n1\nariwells2001@gmail.com\n2023-05-26 08:00:00\n560.0\n2297.0\n4271.0\n54613010.0\n22018948.0\n0.0\n0.0\n1\n\n\n1\n2\nariwells2001@gmail.com\n2023-05-26 08:01:00\n590.0\n2297.0\n4271.0\n54673025.0\n22078965.0\n0.0\n0.0\n1\n\n\n\n\n\n\n\n\ndf.to_csv(\"iot.csv\",index=False)\ndf.head(2)\n\n\n\n\n\n\n\n\nid\naccount\ntimestamp\nco2\ntemperature\nhumidity\ndoor\nmotion\nfp2\noccupancy\nuser_id\n\n\n\n\n0\n1\nariwells2001@gmail.com\n2023-05-26 08:00:00\n560.0\n2297.0\n4271.0\n54613010.0\n22018948.0\n0.0\n0.0\n1\n\n\n1\n2\nariwells2001@gmail.com\n2023-05-26 08:01:00\n590.0\n2297.0\n4271.0\n54673025.0\n22078965.0\n0.0\n0.0\n1\n\n\n\n\n\n\n\n\n\n7.1.2.2 수정된 csv file Mariadb(mysql)에 import하기\n#mysql에 로그인\n\n#iotuser라는 ID 생성하기\ncreate user 'iotuser'@'localhost' identified by 'iot12345';\ncreate user 'iotuser'@'%' identified by 'iot12345';\ngrant all privileges on *.* to 'iotuser'@'localhost';\ngrant all privileges on *.* to 'iotuser'@'%';\nflush privileges;\n\n#Django에서 생성된 테이블(patternTablee)의 user라는 foreign_key를 import시 체크하지 않도록 설정\nset foreign_key_checks=0\nload data infile \"iot.csv\" into table patternTable fields terminated by ',' ignore 1 rows;\nset foreign_key_checks=1  # revert to the original setting"
  }
]